<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Adai.Standard</name>
    </assembly>
    <members>
        <member name="T:Adai.Standard.Accessor`1">
            <summary>
            Accessor
            </summary>
            <typeparam name="S"></typeparam>
        </member>
        <member name="M:Adai.Standard.Accessor`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Adai.Standard.Accessor`1.Create``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Create
            </summary>
            <typeparam name="T"></typeparam>
            <param name="memberSelector"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Accessor`1.Get``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Get
            </summary>
            <typeparam name="T"></typeparam>
            <param name="memberSelector"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Accessor`1.GetterSetter`1">
            <summary>
            GetterSetter
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Adai.Standard.Accessor`1.GetterSetter`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            GetterSetter
            </summary>
            <param name="memberSelector"></param>
        </member>
        <member name="T:Adai.Standard.Accessor`2">
            <summary>
            Accessor
            </summary>
            <typeparam name="S"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Adai.Standard.Accessor`2.Getter">
            <summary>
            Getter
            </summary>
        </member>
        <member name="P:Adai.Standard.Accessor`2.Setter">
            <summary>
            Setter
            </summary>
        </member>
        <member name="P:Adai.Standard.Accessor`2.CanRead">
            <summary>
            IsReadable
            </summary>
        </member>
        <member name="P:Adai.Standard.Accessor`2.CanWrite">
            <summary>
            IsWritable
            </summary>
        </member>
        <member name="P:Adai.Standard.Accessor`2.Item(`0)">
            <summary>
            T
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Accessor`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Accessor
            access not given to outside world
            </summary>
            <param name="memberSelector"></param>
        </member>
        <member name="T:Adai.Standard.AccessorExample">
            <summary>
            AccessorExample
            </summary>
        </member>
        <member name="M:Adai.Standard.AccessorExample.Example">
            <summary>
            Example
            </summary>
        </member>
        <member name="T:Adai.Standard.AccessorExample.Person">
            <summary>
            Person
            </summary>
        </member>
        <member name="T:Adai.Standard.Config.SocketState">
            <summary>
            SocketState
            </summary>
        </member>
        <member name="F:Adai.Standard.Config.SocketState.Connecting">
            <summary>
            连接中
            </summary>
        </member>
        <member name="F:Adai.Standard.Config.SocketState.Open">
            <summary>
            已连接
            </summary>
        </member>
        <member name="F:Adai.Standard.Config.SocketState.Closing">
            <summary>
            关闭中
            </summary>
        </member>
        <member name="F:Adai.Standard.Config.SocketState.Closed">
            <summary>
            已关闭
            </summary>
        </member>
        <member name="T:Adai.Standard.Const">
            <summary>
            Const
            </summary>
        </member>
        <member name="F:Adai.Standard.Const.DateTimeFormat">
            <summary>
            时间格式
            </summary>
        </member>
        <member name="F:Adai.Standard.Const.RequestId">
            <summary>
            RequestId
            </summary>
        </member>
        <member name="T:Adai.Standard.Extensions.BuilderExtensions">
            <summary>
            BuilderExtensions
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseDbContext(Microsoft.AspNetCore.Builder.IApplicationBuilder,Adai.Standard.Options.DbContextOptions)">
            <summary>
            UseDbContext
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseDbContext(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Adai.Standard.Options.DbContextOptions})">
            <summary>
            UseDbContext
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseRedis(Microsoft.AspNetCore.Builder.IApplicationBuilder,Adai.Standard.Options.RedisOptions)">
            <summary>
            UseRedis
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseRedis(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Adai.Standard.Options.RedisOptions})">
            <summary>
            UseRedis
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseRabbitMQ(Microsoft.AspNetCore.Builder.IApplicationBuilder,Adai.Standard.Options.RabbitMqOptions)">
            <summary>
            UseRabbitMQ
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseRabbitMQ(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Adai.Standard.Options.RabbitMqOptions})">
            <summary>
            UseRabbitMQ
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseMail(Microsoft.AspNetCore.Builder.IApplicationBuilder,Adai.Standard.Options.MailOptions)">
            <summary>
            UseMail
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.BuilderExtensions.UseMail(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Adai.Standard.Options.MailOptions})">
            <summary>
            UseMail
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.ConfigExtensions">
            <summary>
            ConfigExt
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.ConfigExtensions.GetNote(Adai.Standard.Config.SocketState)">
            <summary>
            获取说明
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.HttpRequestExtensions">
            <summary>
            HttpRequestExt
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.GetFullPath(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            GetFullPath
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.GetPath(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求路径
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.VerifyRequestFrequencyLimit(Microsoft.AspNetCore.Http.HttpRequest,System.Double,System.String)">
            <summary>
            验证请求频率
            </summary>
            <param name="httpRequest"></param>
            <param name="limit"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.GetParameters(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求参数
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.ReadBody(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Encoding)">
            <summary>
            读取内容
            </summary>
            <param name="httpRequest"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.IsMobileDevice(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            是否移动设备
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.HttpRequestExtensions.GetValue(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)">
            <summary>
            获取值
            </summary>
            <param name="headers"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.IDictionaryExtensions">
            <summary>
            IDictionaryExt
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.Sort``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IComparer{``0})">
            <summary>
            排序
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.SortByASCII``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            ASCII排序
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.ToSortedDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            类型转换
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.FilterSort``2(System.Collections.Generic.IDictionary{``0,``1},``0[])">
            <summary>
            按指定键值筛选并排序
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0[])">
            <summary>
            删除指定键
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dic"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.ToQueryString(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.String[])">
            <summary>
            转换为QueryString
            </summary>
            <param name="parameters"></param>
            <param name="ignoreNullOrEmpty"></param>
            <param name="ignores"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.ToJoinString(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Boolean,System.String[])">
            <summary>
            转换为连接字符串
            </summary>
            <param name="parameters"></param>
            <param name="separator"></param>
            <param name="ignoreNullOrEmpty"></param>
            <param name="ignores"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.ToXmlString(System.Collections.Generic.IDictionary{System.String,System.String},System.String[])">
            <summary>
            转换为Xml字符串
            </summary>
            <param name="parameters"></param>
            <param name="ignores"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.IDictionaryExtensions.ToQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.Boolean,System.String[])">
            <summary>
            转换为QueryString
            </summary>
            <param name="parameters"></param>
            <param name="ignoreNullOrEmpty"></param>
            <param name="ignores"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.OptionsExtensions">
            <summary>
            OptionsExtensions
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.OptionsExtensions.AddConfig(Adai.Standard.Options.DbContextOptions,Adai.DbContext.Config.DbType,System.String,System.String)">
            <summary>
            AddConfig
            </summary>
            <param name="options"></param>
            <param name="dbType"></param>
            <param name="name"></param>
            <param name="connectionString"></param>
        </member>
        <member name="T:Adai.Standard.Extensions.ProviderExtensions">
            <summary>
            ProviderExtensions
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.ProviderExtensions.AddLoggerProvider(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            AddLoggerProvider
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.RedisExtensions">
            <summary>
            RedisExtensions
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.Get``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            Get
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.Set``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,``0,System.Nullable{System.TimeSpan},StackExchange.Redis.When,StackExchange.Redis.CommandFlags)">
            <summary>
            Get
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiry"></param>
            <param name="when"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashGet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue,StackExchange.Redis.CommandFlags)">
            <summary>
            HashGet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashField"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashGet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.RedisValue[],StackExchange.Redis.CommandFlags)">
            <summary>
            HashGet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashFields"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashSet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisValue,StackExchange.Redis.RedisValue,``0,StackExchange.Redis.When,StackExchange.Redis.CommandFlags)">
            <summary>
            HashSet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hashField"></param>
            <param name="value"></param>
            <param name="when"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashSet``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,System.Collections.Generic.IDictionary{StackExchange.Redis.RedisValue,``0},StackExchange.Redis.CommandFlags)">
            <summary>
            HashSet
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="hash"></param>
            <param name="flags"></param>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashGetAll``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            HashGetAll
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.HashValues``1(StackExchange.Redis.IDatabase,StackExchange.Redis.RedisKey,StackExchange.Redis.CommandFlags)">
            <summary>
            HashValues
            </summary>
            <typeparam name="T"></typeparam>
            <param name="db"></param>
            <param name="key"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToInt32(StackExchange.Redis.RedisValue,System.Int32)">
            <summary>
            转换为整形
            </summary>
            <param name="value"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToInt64(StackExchange.Redis.RedisValue,System.Int64)">
            <summary>
            转换为长整形
            </summary>
            <param name="value"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToInt32Array(StackExchange.Redis.RedisValue[])">
            <summary>
            从RedisValue数组创建一个整形数组
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToInt64Array(StackExchange.Redis.RedisValue[])">
            <summary>
            从RedisValue数组创建一个长整型数组
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToStringArray(StackExchange.Redis.RedisValue[])">
            <summary>
            从RedisValue数组创建一个长整型数组
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToObjectArray``1(StackExchange.Redis.RedisValue[])">
            <summary>
            从RedisValue数组（Json字符串）创建一个指定类型的对象数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToStringDictionary(StackExchange.Redis.HashEntry[])">
            <summary>
            从HashEntry数组创建一个字典（value的类型是字符串）
            </summary>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.RedisExtensions.ToObjectDictionary``1(StackExchange.Redis.HashEntry[])">
            <summary>
            从HashEntry数组（value的类型是Json字符串）创建一个字典（value的类型是指定对象）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Extensions.ServiceCollectionExtensions">
            <summary>
            ServiceCollectionExtensions
            </summary>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddDbService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加数据库服务 - 依赖注入单例
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddRedisService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Redis服务 - 依赖注入单例
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddRabbitMqService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加RabbitMq服务 - 依赖注入单例
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.DbContextOptions})">
            <summary>
            注册数据库服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.ConfigureDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.DbContextOptions})">
            <summary>
            注册数据库服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.RedisOptions})">
            <summary>
            注册Redis服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.ConfigureRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.RedisOptions})">
            <summary>
            配置Redis服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddRabbitMQ(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.RabbitMqOptions})">
            <summary>
            注册RabbitMQ服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.ConfigureRabbitMQ(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.RabbitMqOptions})">
            <summary>
            配置RabbitMQ服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.AddMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.MailOptions})">
            <summary>
            注册邮箱服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Extensions.ServiceCollectionExtensions.ConfigureMail(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Adai.Standard.Options.MailOptions})">
            <summary>
            配置邮箱服务
            </summary>
            <param name="services"></param>
            <param name="setupAction"></param>
        </member>
        <member name="T:Adai.Standard.Extensions.X509CertificateExtensions">
            <summary>
            X509CertificateExt
            </summary>
        </member>
        <member name="T:Adai.Standard.HttpContentType">
            <summary>
            HttpContentType
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.TextHtml">
            <summary>
            TextHtml
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.TextXml">
            <summary>
            TextXml
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.FormData">
            <summary>
            Form
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpContentType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="T:Adai.Standard.HttpMethod">
            <summary>
            HttpMethod
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpMethod.Get">
            <summary>
            Get
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpMethod.Post">
            <summary>
            Post
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpMethod.Put">
            <summary>
            Put
            </summary>
        </member>
        <member name="F:Adai.Standard.HttpMethod.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:Adai.Standard.Interfaces.IActionResult`1">
            <summary>
            IActionResult
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Adai.Standard.Interfaces.IActionResult`1.ActionId">
            <summary>
            动作Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Interfaces.IActionResult`1.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:Adai.Standard.Interfaces.IActionResult`1.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Adai.Standard.Interfaces.IActionResult`1.Content">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:Adai.Standard.Interfaces.IActionResult`1.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="T:Adai.Standard.Interfaces.IDbService">
            <summary>
            数据库服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Interfaces.IDbService.GetDbContext(System.String,System.String)">
            <summary>
            GetDbContext
            </summary>
            <param name="eventId"></param>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Interfaces.IDbService.GetSQLiteDbContext(System.String,System.String,System.String)">
            <summary>
            GetSQLiteDbContext
            </summary>
            <param name="eventId"></param>
            <param name="fileName"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Interfaces.IRabbitMqService">
            <summary>
            RabbitMQ服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Interfaces.IRabbitMqService.GetPublisher(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            GetPublisher
            </summary>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Interfaces.IRabbitMqService.GetConsumer(Microsoft.Extensions.Logging.ILogger,System.Func{System.String,System.Boolean})">
            <summary>
            GetConsumer
            </summary>
            <param name="logger"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Interfaces.IRedisService">
            <summary>
            Redis服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Interfaces.IRedisService.GetDatabase(System.Int32,System.Object)">
            <summary>
            GetDatabase
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="F:Adai.Standard.Language.ZH_CN">
            <summary>
            中文（简体）
            </summary>
        </member>
        <member name="F:Adai.Standard.Language.EN_US">
            <summary>
            英文（美国）
            </summary>
        </member>
        <member name="T:Adai.Standard.Middlewares.ExceptionHandlerMiddleware">
            <summary>
            ExceptionHandlerMiddleware
            </summary>
        </member>
        <member name="F:Adai.Standard.Middlewares.ExceptionHandlerMiddleware.next">
            <summary>
            _Next
            </summary>
        </member>
        <member name="F:Adai.Standard.Middlewares.ExceptionHandlerMiddleware.logger">
            <summary>
            _Logger
            </summary>
        </member>
        <member name="M:Adai.Standard.Middlewares.ExceptionHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Adai.Standard.Middlewares.ExceptionHandlerMiddleware})">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Adai.Standard.Middlewares.ExceptionHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Middlewares.ExceptionHandlerMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Exception)">
            <summary>
            HandleExceptionAsync
            </summary>
            <param name="context"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Models.ActionResult`1">
            <summary>
            动作结果
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.ActionResult`1.ActionId">
            <summary>
            动作Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.ActionResult`1.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.ActionResult`1.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.ActionResult`1.Content">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.ActionResult`1.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.ActionResult`1.#ctor(System.String,`0,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="actionId">动作Id</param>
            <param name="content">内容</param>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Adai.Standard.Models.ActionResult`1.#ctor(System.String,System.Int32,System.String,`0,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="actionId">动作Id</param>
            <param name="code">结果代码</param>
            <param name="message">消息</param>
            <param name="content">内容</param>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:Adai.Standard.Models.ActionResult`1.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            ExecuteResultAsync
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Models.ApiException">
            <summary>
            ApiException
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.ApiException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.ApiException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Adai.Standard.Models.ApiException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="T:Adai.Standard.Models.BaseSocket">
            <summary>
            BaseSocket
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.#ctor(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="name"></param>
            <param name="log"></param>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Encoding">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.IPAddress">
            <summary>
            IPAddress
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.IPEndPoint">
            <summary>
            IPEndPoint
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Remotes">
            <summary>
            远程
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.BaseSocket.Log">
            <summary>
            是否记录日志
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.BaseSocket.MessageHandler">
            <summary>
            接收消息委托
            </summary>
            <param name="remote"></param>
            <param name="message"></param>
        </member>
        <member name="T:Adai.Standard.Models.BaseSocket.StateChangeHandler">
            <summary>
            连接状态改变委托
            </summary>
            <param name="remote"></param>
            <param name="state"></param>
            <param name="message"></param>
        </member>
        <member name="E:Adai.Standard.Models.BaseSocket.MessageEvent">
            <summary>
            接收消息事件
            </summary>
        </member>
        <member name="E:Adai.Standard.Models.BaseSocket.StateChangeEvent">
            <summary>
            连接状态改变事件
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Open(System.Net.Sockets.Socket)">
            <summary>
            开启连接
            </summary>
            <param name="remote"></param>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Close(System.Net.Sockets.Socket,System.String)">
            <summary>
            关闭连接
            </summary>
            <param name="remote"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Receive(System.Net.Sockets.Socket,System.Byte[],System.Int32)">
            <summary>
            接收消息
            </summary>
            <param name="remote"></param>
            <param name="bytes"></param>
            <param name="size"></param>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Send(System.String)">
            <summary>
            客户端发送消息给服务端
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Send(System.String,System.Net.Sockets.Socket[])">
            <summary>
            服务端发送消息给客户端
            </summary>
            <param name="message"></param>
            <param name="remotes"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.Send(System.String,System.Net.Sockets.Socket)">
            <summary>
            客户端发送消息给服务端
            </summary>
            <param name="message"></param>
            <param name="remote"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.ChangeState(System.Net.Sockets.Socket,Adai.Standard.Config.SocketState,System.String)">
            <summary>
            改变状态
            </summary>
            <param name="remote"></param>
            <param name="state"></param>
            <param name="message"></param>
        </member>
        <member name="M:Adai.Standard.Models.BaseSocket.ListenReceive(System.Net.Sockets.Socket)">
            <summary>
            监听消息
            </summary>
            <param name="client"></param>
        </member>
        <member name="T:Adai.Standard.Models.CustomException">
            <summary>
            CustomException
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.CustomException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="code">建议使用1000-2000之间的值</param>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:Adai.Standard.Models.CustomException.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.FileConfig">
            <summary>
            文件配置
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.FileConfig.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileConfig.UploadDirectory">
            <summary>
            上传根目录
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileConfig.DownloadDirectory">
            <summary>
            下载根目录
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileConfig.MaxSize">
            <summary>
            大小限制
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileConfig.Extensions">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileConfig.MaxSizeNote">
            <summary>
            大小限制说明
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.FileData">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.FileData.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.Guid">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.Name">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.Extension">
            <summary>
            后缀名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.Length">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.PhysicalPath">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.VirtualPath">
            <summary>
            虚拟路径
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.FileData.FullName">
            <summary>
            扩展.文件全名
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.HttpRequest">
            <summary>
            Http请求数据
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.HttpRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="url"></param>
            <param name="method"></param>
            <param name="contentType"></param>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.Method">
            <summary>
            方法
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.Headers">
            <summary>
            请求头
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpRequest.Body">
            <summary>
            内容参数
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.HttpResponse">
            <summary>
            Http响应数据
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.HttpResponse.#ctor(System.Net.HttpWebResponse,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="httpWebResponse"></param>
            <param name="content"></param>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.StatusCode">
            <summary>
            StatusCode
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.ResponseUri">
            <summary>
            ResponseUri
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.StatusDescription">
            <summary>
            StatusDescription
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.ContentLength">
            <summary>
            ContentLength
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.ContentEncoding">
            <summary>
            ContentEncoding
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.CharacterSet">
            <summary>
            CharacterSet
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.ContentType">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.HttpResponse.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.JsonPropertyContractResolver">
            <summary>
            JsonPropertyContractResolver
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.JsonPropertyContractResolver.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            构造函数
            </summary>
            <param name="includeProperties"></param>
            <param name="excludeProperties"></param>
        </member>
        <member name="M:Adai.Standard.Models.JsonPropertyContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            CreateProperties
            </summary>
            <param name="type"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Models.MailConfig">
            <summary>
            MailConfig
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.MailConfig.SmtpHost">
            <summary>
            SmtpHost
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.MailConfig.SmtpPort">
            <summary>
            SmtpPort
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.MailConfig.SmtpUsername">
            <summary>
            SmtpUsername
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.MailConfig.SmtpPassword">
            <summary>
            SmtpPassword
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.PageArg`1">
            <summary>
            查询条件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Adai.Standard.Models.PageArg`1.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Adai.Standard.Models.SortType)">
            <summary>
            构造函数
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="sortName"></param>
            <param name="sortType"></param>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.TotalCount">
            <summary>
            总记录条数，如果此属性预设值大于零则表示不需要从数据库获取。
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Results">
            <summary>
            分页结果集。
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Filter">
            <summary>
            筛选
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.PageSize">
            <summary>
            每页条数
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.PageNumber">
            <summary>
            页码（从0开始）
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.SortName">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.SortType">
            <summary>
            排序方式：ASC/DESC
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.OnlyCount">
            <summary>
            只统计总数
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.CountFlag">
            <summary>
            统计数量标识
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.SumFlag">
            <summary>
            统计总和标识
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.SumResults">
            <summary>
            计算结果
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Keyword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Keywords">
            <summary>
            关键词组
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.PageArg`1.Platform">
            <summary>
            平台标识
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.RabbitMqConfig">
            <summary>
            RabbitMqConfig
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RabbitMqConfig.Host">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RabbitMqConfig.VirtualHost">
            <summary>
            VHost
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RabbitMqConfig.Port">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RabbitMqConfig.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RabbitMqConfig.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.RedisConfig">
            <summary>
            RedisConfig
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RedisConfig.Host">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RedisConfig.Port">
            <summary>
            Port
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RedisConfig.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.RedisConfig.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.SocketClient">
            <summary>
            SocketClient
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.SocketClient.#ctor(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="name"></param>
            <param name="log"></param>
        </member>
        <member name="T:Adai.Standard.Models.SocketService">
            <summary>
            SocketService
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.SocketService.#ctor(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="name"></param>
            <param name="log"></param>
        </member>
        <member name="T:Adai.Standard.Models.SortType">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="F:Adai.Standard.Models.SortType.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:Adai.Standard.Models.SortType.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.StatisticFlag">
            <summary>
            统计标识
            </summary>
        </member>
        <member name="F:Adai.Standard.Models.StatisticFlag.Not">
            <summary>
            不统计
            </summary>
        </member>
        <member name="F:Adai.Standard.Models.StatisticFlag.General">
            <summary>
            一般统计
            </summary>
        </member>
        <member name="F:Adai.Standard.Models.StatisticFlag.Only">
            <summary>
            只统计
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.Token`1">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.Token`1.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.Token`1.Signature">
            <summary>
            用户名对应签名Token
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.Token`1.Expiry">
            <summary>
            Token过期时间
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.Token`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:Adai.Standard.Models.TokenData">
            <summary>
            TokenData
            </summary>
        </member>
        <member name="M:Adai.Standard.Models.TokenData.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Id">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.FirstName">
            <summary>
            名
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.LastName">
            <summary>
            姓
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.RoleIds">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.AgentId">
            <summary>
            代理商Id
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.IsAdminOfAgent">
            <summary>
            是否代理商管理员
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Adai.Standard.Models.TokenData.Platform">
            <summary>
            平台
            </summary>
        </member>
        <member name="T:Adai.Standard.Options.DbContextOptions">
            <summary>
            DbContextOptions
            </summary>
        </member>
        <member name="P:Adai.Standard.Options.DbContextOptions.Configs">
            <summary>
            数据库配置
            </summary>
        </member>
        <member name="T:Adai.Standard.Options.MailOptions">
            <summary>
            MailOptions
            </summary>
        </member>
        <member name="P:Adai.Standard.Options.MailOptions.Config">
            <summary>
            邮箱配置
            </summary>
        </member>
        <member name="T:Adai.Standard.Options.RabbitMqOptions">
            <summary>
            RabbitMqOptions
            </summary>
        </member>
        <member name="P:Adai.Standard.Options.RabbitMqOptions.Config">
            <summary>
            RabbitMQ配置
            </summary>
        </member>
        <member name="T:Adai.Standard.Options.RedisOptions">
            <summary>
            RedisOptions
            </summary>
        </member>
        <member name="P:Adai.Standard.Options.RedisOptions.Config">
            <summary>
            Redis配置
            </summary>
        </member>
        <member name="T:Adai.Standard.Providers.LoggerProvider">
            <summary>
            LoggerProvider
            </summary>
        </member>
        <member name="M:Adai.Standard.Providers.LoggerProvider.CreateLogger(System.String)">
            <summary>
            CreateLogger
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Providers.LoggerProvider.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:Adai.Standard.RabbitMQ.Base">
            <summary>
            消费者
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Base.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.Logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.Queue">
            <summary>
            队列
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.Exchange">
            <summary>
            通道
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.RoutingKey">
            <summary>
            路由
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.ForwardAfterFailure">
            <summary>
            失败后转发（RoutingKey@error）
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.Connection">
            <summary>
            Connection
            </summary>
        </member>
        <member name="P:Adai.Standard.RabbitMQ.Base.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Base.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Base.Dispose">
            <summary>
            销毁
            </summary>
        </member>
        <member name="T:Adai.Standard.RabbitMQ.Consumer">
            <summary>
            消费者
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Consumer.#ctor(Microsoft.Extensions.Logging.ILogger,System.Func{System.String,System.Boolean})">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
            <param name="func"></param>
        </member>
        <member name="F:Adai.Standard.RabbitMQ.Consumer.Func">
            <summary>
            业务方法
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Consumer.Subscribe">
            <summary>
            订阅消息
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Consumer.Received(System.Object,RabbitMQ.Client.Events.BasicDeliverEventArgs)">
            <summary>
            接收消息
            </summary>
            <param name="sender"></param>
            <param name="ea"></param>
        </member>
        <member name="T:Adai.Standard.RabbitMQ.Publisher">
            <summary>
            生产者
            </summary>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Publisher.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Adai.Standard.RabbitMQ.Publisher.Publish(System.String)">
            <summary>
            订阅消息
            </summary>
        </member>
        <member name="T:Adai.Standard.RARHelper">
            <summary>
            RARHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.RARHelper.ApplicationPath">
            <summary>
            WinRAR.exe路径
            </summary>
        </member>
        <member name="P:Adai.Standard.RARHelper.Level">
            <summary>
            压缩级别（0-5）
            </summary>
        </member>
        <member name="M:Adai.Standard.RARHelper.Compress(System.String,System.String,System.String)">
            <summary>
            利用WinRAR进行压缩
            </summary>
            <param name="sourcePath">要压缩的文件夹（绝对路径）</param>
            <param name="rarPath">压缩后的.rar文件的存放目录（绝对路径）</param>
            <param name="rarName">压缩文件的名称（包括后缀）</param>
        </member>
        <member name="M:Adai.Standard.RARHelper.UnCompress(System.String,System.String,System.String)">
            <summary>
            利用WinRAR进行解压缩
            </summary>
            <param name="path">文件解压路径（绝对）</param>
            <param name="rarPath">要解压缩的.rar文件的存放目录（绝对路径）</param>
            <param name="rarName">要解压缩的.rar文件名（包括后缀）</param>
        </member>
        <member name="T:Adai.Standard.Services.DbService">
            <summary>
            数据库服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.DbService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Adai.Standard.Services.DbService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.DbService.GetDbContext(System.String,System.String)">
            <summary>
            GetDbContext
            </summary>
            <param name="eventId"></param>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Services.DbService.GetSQLiteDbContext(System.String,System.String,System.String)">
            <summary>
            GetSQLiteDbContext
            </summary>
            <param name="eventId"></param>
            <param name="fileName"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Services.LoggerService">
            <summary>
            LoggerService
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.LoggerService.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Log
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="logLevel"></param>
            <param name="eventId"></param>
            <param name="state"></param>
            <param name="exception"></param>
            <param name="formatter"></param>
        </member>
        <member name="M:Adai.Standard.Services.LoggerService.BeginScope``1(``0)">
            <summary>
            BeginScope
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Services.LoggerService.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            IsEnabled
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Services.RabbitMqService">
            <summary>
            RabbitMQ服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.RabbitMqService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Adai.Standard.Services.RabbitMqService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.RabbitMqService.GetPublisher(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            GetPublisher
            </summary>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Services.RabbitMqService.GetConsumer(Microsoft.Extensions.Logging.ILogger,System.Func{System.String,System.Boolean})">
            <summary>
            GetConsumer
            </summary>
            <param name="logger"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Services.RedisService">
            <summary>
            Redis服务
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.RedisService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Adai.Standard.Services.RedisService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Adai.Standard.Services.RedisService.GetDatabase(System.Int32,System.Object)">
            <summary>
            GetDatabase
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.ComputerHelper">
            <summary>
            ComputerHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.ComputerHelper.GetMacAddress">
            <summary>
            获取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.ComputerHelper.GetMacAddresses">
            <summary>
            获取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.ComputerHelper.GetMacAddressesByWin32">
            <summary>
            获取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.DbContextHelper">
            <summary>
            DbContextHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.DbContextHelper.Init(System.Collections.Generic.ICollection{Adai.DbContext.Models.DbConfig})">
            <summary>
            初始化
            </summary>
            <param name="configs"></param>
        </member>
        <member name="M:Adai.Standard.Utils.DbContextHelper.GetMySqlDbContext(System.String,System.String)">
            <summary>
            GetMySqlDbContext
            </summary>
            <param name="eventId"></param>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.DbContextHelper.GetSQLiteDbContext(System.String,System.String)">
            <summary>
            GetMySqlDbContext
            </summary>
            <param name="eventId"></param>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.DbContextHelper.GetSQLiteDbContext(System.String,System.String,System.String)">
            <summary>
            GetSQLiteDbContext
            </summary>
            <param name="eventId"></param>
            <param name="fileName"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.DbContextHelper.BeforeExecute(System.String,System.Data.IDbCommand)">
            <summary>
            执行前执行
            </summary>
            <param name="eventId"></param>
            <param name="command"></param>
        </member>
        <member name="T:Adai.Standard.Utils.FileHelper">
            <summary>
            FileHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.FileHelper.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.Init(Adai.Standard.Models.FileConfig)">
            <summary>
            初始化
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.UploadAsync(System.String,Microsoft.AspNetCore.Http.IFormFile[])">
            <summary>
            上传
            </summary>
            <param name="rootPath"></param>
            <param name="formFiles"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.Compress(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            批量压缩
            </summary>
            <param name="rootPath"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.OutputImage(System.String)">
            <summary>
            输出图片
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.Output(System.Byte[],System.String,System.String)">
            <summary>
            输出文件
            </summary>
            <param name="bytes"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.Output(System.IO.Stream,System.String,System.String)">
            <summary>
            输出文件
            </summary>
            <param name="stream"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.ToPhysicalPath(System.String,System.Char)">
            <summary>
            转换为物理路径
            </summary>
            <param name="path"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.FileHelper.GetFileSize(System.Int64)">
            <summary>
            换算文件大小
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.HttpHelper">
            <summary>
            HttpHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.SendGet(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            发送参数类型为Url的GET请求
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.SendPost(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            发送参数类型为Url的POST请求
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.SendPostByJson``1(System.String,System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            发送参数类型为Json的POST请求
            </summary>
            <param name="url"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.CreateRequest(Adai.Standard.Models.HttpRequest)">
            <summary>
            创建请求
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.SendRequest(Adai.Standard.Models.HttpRequest)">
            <summary>
            发送POST请求
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.ParseQueryString(System.String)">
            <summary>
            ParseQueryString
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncode``1(``0)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncode``1(``0,System.Text.Encoding)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncodeUpper``1(``0)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncodeUpper``1(``0,System.Text.Encoding)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncodeUpper(System.String)">
            <summary>
            转换Url编码为大写
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlEncodeUpper(System.String,System.Text.Encoding)">
            <summary>
            转换Url编码为大写
            </summary>
            <param name="str"></param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlDecode``1(``0)">
            <summary>
            UrlDecode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.UrlDecode``1(``0,System.Text.Encoding)">
            <summary>
            UrlDecode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.HttpHelper.IsIp(System.String)">
            <summary>
            IsIp
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.HttpListenerHelper">
            <summary>
            HttpListenerHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.HttpListenerHelper.Start(System.String,System.Func{System.Net.HttpListenerRequest,System.Collections.Generic.IDictionary{System.String,System.String},System.String},System.String)">
            <summary>
            开启服务
            </summary>
            <param name="uriPrefix"></param>
            <param name="contentType"></param>
            <param name="callback"></param>
        </member>
        <member name="T:Adai.Standard.Utils.HttpRequestHelper">
            <summary>
            HttpRequestHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.HttpRequestHelper.VerifyFrequencyLimit(System.String,System.String,System.Double)">
            <summary>
            验证请求频率限制
            </summary>
            <param name="ipAddress">IP地址</param>
            <param name="path">请求路径</param>
            <param name="limit">每秒限制次数</param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.DatetimeJsonConverter">
            <summary>
            JsonConverter
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.DatetimeJsonConverter.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:Adai.Standard.Utils.DatetimeJsonConverter.Format">
            <summary>
            格式
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.DatetimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.DatetimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:Adai.Standard.Utils.JsonHelper">
            <summary>
            JsonHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.JsonHelper.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:Adai.Standard.Utils.JsonHelper.Settings">
            <summary>
            Settings
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.SerializeObject``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.SerializeObject(System.Object,System.String[],System.String[])">
            <summary>
            SerializeObject
            </summary>
            <param name="value"></param>
            <param name="includeProperties"></param>
            <param name="excludeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.JsonHelper.DeserializeObject``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.Log4netHelper">
            <summary>
            Log4netHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.Log4netHelper.Repository">
            <summary>
            Repository
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Info(System.String,System.Exception)">
            <summary>
            Info
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Info(System.String,System.String,System.Exception)">
            <summary>
            Info
            </summary>
            <param name="eventId">事件Id</param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Error(System.String,System.Exception)">
            <summary>
            Error
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Error(System.String,System.String,System.Exception)">
            <summary>
            Error
            </summary>
            <param name="eventId">事件Id</param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Debug(System.String,System.Exception)">
            <summary>
            Error
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.Log4netHelper.Debug(System.String,System.String,System.Exception)">
            <summary>
            Error
            </summary>
            <param name="eventId">事件Id</param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Adai.Standard.Utils.LoggerHelper">
            <summary>
            LoggerHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.LoggerHelper.Logger">
            <summary>
            Logger
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Init(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            初始化
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Trace(System.String,System.String,System.Exception)">
            <summary>
            Trace
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Debug(System.String,System.String,System.Exception)">
            <summary>
            Debug
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Info(System.String,System.String,System.Exception)">
            <summary>
            Info
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Warn(System.String,System.String,System.Exception)">
            <summary>
            Warn
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Error(System.String,System.String,System.Exception)">
            <summary>
            Error
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.Critical(System.String,System.String,System.Exception)">
            <summary>
            Critical
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:Adai.Standard.Utils.LoggerHelper.FormatMessage(System.String,System.String)">
            <summary>
            格式化消息
            </summary>
            <param name="requestId"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.MailHelper">
            <summary>
            MailHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.MailHelper.Config">
            <summary>
            Config
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.MailHelper.Init(Adai.Standard.Models.MailConfig)">
            <summary>
            初始化
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Adai.Standard.Utils.MailHelper.CreateSmtpClient">
            <summary>
            CreateSmtpClient
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.MailHelper.Send(System.String,System.String,System.String)">
            <summary>
            发送
            </summary>
            <param name="recipients"></param>
            <param name="subject"></param>
            <param name="body"></param>
        </member>
        <member name="T:Adai.Standard.Utils.RabbitMQHelper">
            <summary>
            RabbitMQHelper
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.RabbitMQHelper.Config">
            <summary>
            Config
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.RabbitMQHelper.Init(Adai.Standard.Models.RabbitMqConfig)">
            <summary>
            初始化
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RabbitMQHelper.CreateConnectionFactory(Adai.Standard.Models.RabbitMqConfig)">
            <summary>
            CreateConnectionFactory
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.RedisHelper">
            <summary>
            RedisHelper
            </summary>
        </member>
        <member name="F:Adai.Standard.Utils.RedisHelper.DbCount">
            <summary>
            DbCount
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.RedisHelper.Instances">
            <summary>
            实例
            </summary>
        </member>
        <member name="P:Adai.Standard.Utils.RedisHelper.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.Init(Adai.Standard.Models.RedisConfig)">
            <summary>
            初始化
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.GetDatabase(System.Int32,System.Object)">
            <summary>
            GetDatabase
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.GetDatabase(Adai.Standard.Models.RedisConfig)">
            <summary>
            GetDatabase
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.GetConnectionMultiplexer(Adai.Standard.Models.RedisConfig)">
            <summary>
            GetConnectionMultiplexer
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.CreateConfiguration(System.String,System.Int32,System.String)">
            <summary>
            CreateConfiguration
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerConfigurationChangedBroadcast(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            当节点被明确请求通过广播重新配置时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerHashSlotMoved(System.Object,StackExchange.Redis.HashSlotMovedEventArgs)">
            <summary>
            当哈希槽被重新定位时/更改集群
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerErrorMessage(System.Object,StackExchange.Redis.RedisErrorEventArgs)">
            <summary>
            发生错误时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerConfigurationChanged(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            检测到配置更改时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerConnectionFailed(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            连接失败，如果重新连接成功将不会收到这个通知
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerInternalError(System.Object,StackExchange.Redis.InternalErrorEventArgs)">
            <summary>
            发生内部错误时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Adai.Standard.Utils.RedisHelper.MuxerConnectionRestored(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            建立物理连接时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Adai.Standard.Utils.TokenHelper">
            <summary>
            TokenHelper
            </summary>
        </member>
        <member name="F:Adai.Standard.Utils.TokenHelper.CacheKey">
            <summary>
            CacheKey
            </summary>
        </member>
        <member name="F:Adai.Standard.Utils.TokenHelper.Expiry">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.TokenHelper.Set``1(``0,System.String)">
            <summary>
            设置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.TokenHelper.Get``1(System.String,System.String)">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="signature"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.TokenHelper.Verify``1(System.String,Adai.Standard.Models.Token{``0}@,System.String)">
            <summary>
            验证
            </summary>
            <typeparam name="T"></typeparam>
            <param name="signature"></param>
            <param name="token"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="T:Adai.Standard.Utils.VerifyCodeHelper">
            <summary>
            VerifyCodeHelper
            </summary>
        </member>
        <member name="M:Adai.Standard.Utils.VerifyCodeHelper.GenerateImageCode(System.String,System.Int32)">
            <summary>
            生成图片验证码
            </summary>
            <param name="guid"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.VerifyCodeHelper.VerifyImageCode(System.String,System.String)">
            <summary>
            验证图片验证码
            </summary>
            <param name="guid"></param>
            <param name="code"></param>
        </member>
        <member name="M:Adai.Standard.Utils.VerifyCodeHelper.GenerateImageCode(System.Int32,System.String@)">
            <summary>
            生成指定长度的图片验证码
            </summary>
            <param name="length"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.VerifyCodeHelper.GenerateImageCode(Microsoft.AspNetCore.Http.HttpResponse,System.String,System.Int32)">
            <summary>
            生成图片验证码
            </summary>
            <param name="httpResponse"></param>
            <param name="guid"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Adai.Standard.Utils.VerifyCodeHelper.VerifyImageCode(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            验证图片验证码
            </summary>
            <param name="httpRequest"></param>
        </member>
    </members>
</doc>
