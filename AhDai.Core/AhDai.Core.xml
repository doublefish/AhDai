<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AhDai.Core</name>
    </assembly>
    <members>
        <member name="T:AhDai.Core.ApiException">
            <summary>
            ApiException
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="extraData"></param>
        </member>
        <member name="M:AhDai.Core.ApiException.#ctor(System.Int32,System.String,System.Exception,System.Object)">
            <summary>
            ApiException
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="extraData"></param>
        </member>
        <member name="P:AhDai.Core.ApiException.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiException.ExtraData">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="M:AhDai.Core.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:AhDai.Core.ApiException.Throw``1(``0,System.Object[])">
            <summary>
            抛出异常
            </summary>
            <param name="code"></param>
            <param name="args"></param>
        </member>
        <member name="M:AhDai.Core.ApiException.Throw``1(System.Exception,``0,System.Object[])">
            <summary>
            抛出异常
            </summary>
            <param name="innerException"></param>
            <param name="code"></param>
            <param name="args"></param>
        </member>
        <member name="T:AhDai.Core.ApiResult">
            <summary>
            ApiResult
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiResult.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiResult.TraceId">
            <summary>
            追踪Id
            </summary>
        </member>
        <member name="M:AhDai.Core.ApiResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:AhDai.Core.ApiResult.Success``1(``0)">
            <summary>
            返回成功
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.ApiResult.Success">
            <summary>
            返回成功
            </summary>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.ApiResult.Error(System.Int32,System.String,System.Object)">
            <summary>
            返回错误
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="extraData"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.ApiResult`1">
            <summary>
            接口结果
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiResult`1.Data">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:AhDai.Core.ApiResult`1.ExtraData">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="M:AhDai.Core.ApiResult`1.#ctor(`0)">
            <summary>
            构造函数
            </summary>
            <param name="data">内容</param>
        </member>
        <member name="M:AhDai.Core.ApiResult`1.#ctor(System.Int32,System.String,`0)">
            <summary>
            构造函数
            </summary>
            <param name="code">结果代码</param>
            <param name="message">消息</param>
            <param name="data">内容</param>
        </member>
        <member name="T:AhDai.Core.Attributes.ApiAuthorizeAttribute">
            <summary>
            ApiAuthorizeAttribute
            </summary>
        </member>
        <member name="F:AhDai.Core.Attributes.ApiAuthorizeAttribute._logger">
            <summary>
            _logger
            </summary>
        </member>
        <member name="P:AhDai.Core.Attributes.ApiAuthorizeAttribute.Frequency">
            <summary>
            访问频率
            </summary>
        </member>
        <member name="P:AhDai.Core.Attributes.ApiAuthorizeAttribute.VerifyToken">
            <summary>
            是否验证Token
            </summary>
        </member>
        <member name="P:AhDai.Core.Attributes.ApiAuthorizeAttribute.VerifyRight">
            <summary>
            是否验证权限
            </summary>
        </member>
        <member name="M:AhDai.Core.Attributes.ApiAuthorizeAttribute.#ctor(Microsoft.Extensions.Logging.ILogger{AhDai.Core.Attributes.ApiAuthorizeAttribute})">
            <summary>
            构造函数
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Attributes.ApiAuthorizeAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            OnActionExecutionAsync
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Attributes.ApiAuthorizeAttribute.VerifyLogin(System.String,AhDai.Core.Models.TokenResult@)">
            <summary>
            验证登录
            </summary>
            <param name="token"></param>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Attributes.ApiAuthorizeAttribute.VerifyRequestRight(System.String,System.String)">
            <summary>
            验证权限
            </summary>
            <param name="userId"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Attributes.ApiAuthorizeAttribute.WriteLog(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            记录日志
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="T:AhDai.Core.Attributes.ErrorCodeAttribute">
            <summary>
            ErrorCodeAttribute
            </summary>
        </member>
        <member name="P:AhDai.Core.Attributes.ErrorCodeAttribute.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="M:AhDai.Core.Attributes.ErrorCodeAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:AhDai.Core.Configs.ElasticConfig">
            <summary>
            ElasticConfig
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.ElasticConfig.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.ElasticConfig.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.ElasticConfig.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.ElasticConfig.DefaultIndex">
            <summary>
            默认索引
            </summary>
        </member>
        <member name="T:AhDai.Core.Configs.FileConfig">
            <summary>
            文件配置
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.FileConfig.UploadDirectory">
            <summary>
            上传根目录
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.FileConfig.DownloadDirectory">
            <summary>
            下载根目录
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.FileConfig.MaxSize">
            <summary>
            大小限制
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.FileConfig.Extensions">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.FileConfig.MaxSizeNote">
            <summary>
            大小限制说明
            </summary>
        </member>
        <member name="T:AhDai.Core.Configs.JwtConfig">
            <summary>
            JwtConfig
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.Issuer">
            <summary>
            签发人
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.Audience">
            <summary>
            受众
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.SigningKey">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.Expiration">
            <summary>
            超时时间（分钟）
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.ClockSkew">
            <summary>
            允许服务器时间偏移量（秒）
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.EnableRedis">
            <summary>
            启用Redis，声明数据里必须有 Username，且具有唯一性
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.JwtConfig.RedisKey">
            <summary>
            RedisKey
            </summary>
        </member>
        <member name="T:AhDai.Core.Configs.LogRequestConfig">
            <summary>
            LogRequestConfig
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.LogRequestConfig.Methods">
            <summary>
            方法
            </summary>
        </member>
        <member name="T:AhDai.Core.Configs.MailConfig">
            <summary>
            MailConfig
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.MailConfig.SmtpHost">
            <summary>
            Smtp主机
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.MailConfig.SmtpPort">
            <summary>
            Smtp端口
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.MailConfig.SmtpUsername">
            <summary>
            Smtp用户名
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.MailConfig.SmtpPassword">
            <summary>
            Smtp密码
            </summary>
        </member>
        <member name="T:AhDai.Core.Configs.RedisConfig">
            <summary>
            RedisConfig
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.RedisConfig.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.RedisConfig.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.RedisConfig.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.RedisConfig.AbortConnect">
            <summary>
            连接失败时放弃连接
            如果为 true，则 Connect 不会在没有可用服务器时创建连接
            </summary>
        </member>
        <member name="P:AhDai.Core.Configs.RedisConfig.Database">
            <summary>
            默认库
            </summary>
        </member>
        <member name="T:AhDai.Core.Const">
            <summary>
            Const
            </summary>
        </member>
        <member name="F:AhDai.Core.Const.DateTimeFormatRfc3339">
            <summary>
            时间格式：2015-05-20T13:29:35+08:00
            </summary>
        </member>
        <member name="F:AhDai.Core.Const.DateTimeFormat">
            <summary>
            时间格式
            </summary>
        </member>
        <member name="F:AhDai.Core.Const.RequestId">
            <summary>
            请求Id
            </summary>
        </member>
        <member name="F:AhDai.Core.Const.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:AhDai.Core.Const.Authorization">
            <summary>
            Authorization
            </summary>
        </member>
        <member name="T:AhDai.Core.Extensions.BuilderExtensions">
            <summary>
            BuilderExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.BuilderExtensions.UseRedis(Microsoft.AspNetCore.Builder.IApplicationBuilder,AhDai.Core.Options.RedisOptions)">
            <summary>
            UseRedis
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.BuilderExtensions.UseRedis(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{AhDai.Core.Options.RedisOptions})">
            <summary>
            UseRedis
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.BuilderExtensions.UseMail(Microsoft.AspNetCore.Builder.IApplicationBuilder,AhDai.Core.Options.MailOptions)">
            <summary>
            UseMail
            </summary>
            <param name="app"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.BuilderExtensions.UseMail(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{AhDai.Core.Options.MailOptions})">
            <summary>
            UseMail
            </summary>
            <param name="app"></param>
            <param name="setupAction"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.BuilderExtensions.ConfigInvalidModelStateResponse(Microsoft.AspNetCore.Mvc.ApiBehaviorOptions)">
            <summary>
            配置实体验证错误返回结果
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:AhDai.Core.Extensions.ConfigurationExtensions">
            <summary>
            ConfigurationExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.ConfigurationExtensions.GetJwtConfig(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取Jwt配置
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ConfigurationExtensions.GetMailConfig(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取邮件配置
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ConfigurationExtensions.GetRedisConfig(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取Redis配置
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ConfigurationExtensions.GetFileConfig(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取File配置
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.HttpRequestExtensions">
            <summary>
            HttpRequestExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.MobileDeviceRegex">
            <remarks>
            Pattern:<br/>
            <code>(iemobile|iphone|ipod|android|nokia|sonyericsson|blackberry|samsung|sec\\-|windows ce|motorola|mot\\-|up.b|midp\\-)</code><br/>
            Options:<br/>
            <code>RegexOptions.IgnoreCase | RegexOptions.Compiled</code><br/>
            Explanation:<br/>
            <code>
            ○ 1st capture group.<br/>
                ○ Match with 10 alternative expressions, atomically.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [Ee].<br/>
                                ○ Match a character in the set [Mm].<br/>
                                ○ Match a character in the set [Oo].<br/>
                                ○ Match a character in the set [Bb].<br/>
                                ○ Match a character in the set [Ii\u0130].<br/>
                                ○ Match a character in the set [Ll].<br/>
                                ○ Match a character in the set [Ee].<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [Pp].<br/>
                                ○ Match with 2 alternative expressions, atomically.<br/>
                                    ○ Match a sequence of expressions.<br/>
                                        ○ Match a character in the set [Hh].<br/>
                                        ○ Match a character in the set [Oo].<br/>
                                        ○ Match a character in the set [Nn].<br/>
                                        ○ Match a character in the set [Ee].<br/>
                                    ○ Match a sequence of expressions.<br/>
                                        ○ Match a character in the set [Oo].<br/>
                                        ○ Match a character in the set [Dd].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Aa].<br/>
                        ○ Match a character in the set [Nn].<br/>
                        ○ Match a character in the set [Dd].<br/>
                        ○ Match a character in the set [Rr].<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match a character in the set [Dd].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Nn].<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Kk\u212A].<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match a character in the set [Aa].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ss].<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Nn].<br/>
                        ○ Match a character in the set [Yy].<br/>
                        ○ Match a character in the set [Ee].<br/>
                        ○ Match a character in the set [Rr].<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match a character in the set [Cc].<br/>
                        ○ Match a character in the set [Ss] exactly 2 times.<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Nn].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Bb].<br/>
                        ○ Match a character in the set [Ll].<br/>
                        ○ Match a character in the set [Aa].<br/>
                        ○ Match a character in the set [Cc].<br/>
                        ○ Match a character in the set [Kk\u212A].<br/>
                        ○ Match a character in the set [Bb].<br/>
                        ○ Match a character in the set [Ee].<br/>
                        ○ Match a character in the set [Rr] exactly 2 times.<br/>
                        ○ Match a character in the set [Yy].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ss].<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [Aa].<br/>
                                ○ Match a character in the set [Mm].<br/>
                                ○ Match a character in the set [Ss].<br/>
                                ○ Match a character in the set [Uu].<br/>
                                ○ Match a character in the set [Nn].<br/>
                                ○ Match a character in the set [Gg].<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [Ee].<br/>
                                ○ Match a character in the set [Cc].<br/>
                                ○ Match '-'.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Ww].<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match a character in the set [Nn].<br/>
                        ○ Match a character in the set [Dd].<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Ww].<br/>
                        ○ Match a character in the set [Ss].<br/>
                        ○ Match ' '.<br/>
                        ○ Match a character in the set [Cc].<br/>
                        ○ Match a character in the set [Ee].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Oo].<br/>
                        ○ Match a character in the set [Tt].<br/>
                        ○ Match with 2 alternative expressions, atomically.<br/>
                            ○ Match a sequence of expressions.<br/>
                                ○ Match a character in the set [Oo].<br/>
                                ○ Match a character in the set [Rr].<br/>
                                ○ Match a character in the set [Oo].<br/>
                                ○ Match a character in the set [Ll].<br/>
                                ○ Match a character in the set [Aa].<br/>
                            ○ Match '-'.<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Uu].<br/>
                        ○ Match a character in the set [Pp].<br/>
                        ○ Match any character other than '\n'.<br/>
                        ○ Match a character in the set [Bb].<br/>
                    ○ Match a sequence of expressions.<br/>
                        ○ Match a character in the set [Mm].<br/>
                        ○ Match a character in the set [Ii\u0130].<br/>
                        ○ Match a character in the set [Dd].<br/>
                        ○ Match a character in the set [Pp].<br/>
                        ○ Match '-'.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.GetFullPath(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            GetFullPath
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.GetPath(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求路径
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.VerifyRequestFrequencyLimit(Microsoft.AspNetCore.Http.HttpRequest,System.Double,System.String)">
            <summary>
            验证请求频率
            </summary>
            <param name="httpRequest"></param>
            <param name="limit"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.GetParameters(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求参数
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.ReadBody(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Encoding)">
            <summary>
            读取内容
            </summary>
            <param name="httpRequest"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.ReadBodyAsync(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Encoding)">
            <summary>
            读取内容
            </summary>
            <param name="httpRequest"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.IsMobileDevice(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            是否移动设备
            </summary>
            <param name="httpRequest"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpRequestExtensions.GetValue(Microsoft.AspNetCore.Http.IHeaderDictionary,System.String)">
            <summary>
            获取值
            </summary>
            <param name="headers"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.HttpResponseExtensions">
            <summary>
            HttpResponseExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.HttpResponseExtensions.WriteObjectAsync``1(Microsoft.AspNetCore.Http.HttpResponse,``0,System.Threading.CancellationToken)">
            <summary>
            写返回值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="response"></param>
            <param name="data"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.IDictionaryExtensions">
            <summary>
            IDictionaryExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.IDictionaryExtensions.ToQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.Extensions.Primitives.StringValues}},System.String[])">
            <summary>
            ToQueryString
            </summary>
            <param name="pairs"></param>
            <param name="ignores"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.LoggingExtensions">
            <summary>
            LoggingExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.LoggingExtensions.GetName(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            GetName
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.OptionsExtensions">
            <summary>
            OptionsExtensions
            </summary>
        </member>
        <member name="T:AhDai.Core.Extensions.ProviderExtensions">
            <summary>
            ProviderExtensions
            </summary>
        </member>
        <member name="T:AhDai.Core.Extensions.RedisExtensions">
            <summary>
            RedisExtensions
            </summary>
        </member>
        <member name="T:AhDai.Core.Extensions.ServiceCollectionExtensions">
            <summary>
            ServiceCollectionExtensions
            </summary>
        </member>
        <member name="M:AhDai.Core.Extensions.ServiceCollectionExtensions.AddRedisService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Redis服务 - 依赖注入单例
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ServiceCollectionExtensions.AddJwtService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddJwtService
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ServiceCollectionExtensions.AddFileService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            AddFileService
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Extensions.ServiceCollectionExtensions.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,AhDai.Core.Configs.JwtConfig)">
            <summary>
            添加Jwt认证服务
            </summary>
            <param name="services"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Extensions.X509CertificateExtensions">
            <summary>
            X509CertificateExt
            </summary>
        </member>
        <member name="T:AhDai.Core.Filters.ActionFilter">
            <summary>
            ActionFilter
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Filters.ActionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{AhDai.Core.Filters.ActionFilter})">
            <summary>
            ActionFilter
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:AhDai.Core.Filters.ActionFilter.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="M:AhDai.Core.Filters.ActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:AhDai.Core.Filters.ActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            OnActionExecuted
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:AhDai.Core.Filters.AsyncActionFilter">
            <summary>
            AsyncActionFilter
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Filters.AsyncActionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{AhDai.Core.Filters.AsyncActionFilter})">
            <summary>
            AsyncActionFilter
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:AhDai.Core.Filters.AsyncActionFilter.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="M:AhDai.Core.Filters.AsyncActionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            OnActionExecutionAsync
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.HttpContentType">
            <summary>
            HttpContentType
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.TextHtml">
            <summary>
            TextHtml
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.TextXml">
            <summary>
            TextXml
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.FormData">
            <summary>
            Form
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="F:AhDai.Core.HttpContentType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="T:AhDai.Core.IApiResult">
            <summary>
            IApiResult
            </summary>
        </member>
        <member name="P:AhDai.Core.IApiResult.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:AhDai.Core.IApiResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:AhDai.Core.IApiResult.TraceId">
            <summary>
            追踪Id
            </summary>
        </member>
        <member name="T:AhDai.Core.IApiResult`1">
            <summary>
            IApiResult
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AhDai.Core.IApiResult`1.Data">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:AhDai.Core.IApiResult`1.ExtraData">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="T:AhDai.Core.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="F:AhDai.Core.Language.ZH_CN">
            <summary>
            中文（简体）
            </summary>
        </member>
        <member name="F:AhDai.Core.Language.EN_US">
            <summary>
            英文（美国）
            </summary>
        </member>
        <member name="T:AhDai.Core.Middlewares.RequestResponseHandlerMiddleware">
            <summary>
            RequestResponseHandlerMiddleware
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Middlewares.RequestResponseHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{AhDai.Core.Middlewares.RequestResponseHandlerMiddleware})">
            <summary>
            RequestResponseHandlerMiddleware
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Middlewares.RequestResponseHandlerMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            InvokeAsync
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Models.ActionResult`1">
            <summary>
            动作结果
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.ActionResult`1.ActionId">
            <summary>
            动作Id
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.ActionResult`1.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.ActionResult`1.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.ActionResult`1.Content">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.ActionResult`1.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="M:AhDai.Core.Models.ActionResult`1.#ctor(System.String,`0,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="actionId">动作Id</param>
            <param name="content">内容</param>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:AhDai.Core.Models.ActionResult`1.#ctor(System.String,System.Int32,System.String,`0,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="actionId">动作Id</param>
            <param name="code">结果代码</param>
            <param name="message">消息</param>
            <param name="content">内容</param>
            <param name="contentType">内容类型</param>
        </member>
        <member name="M:AhDai.Core.Models.ActionResult`1.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            ExecuteResultAsync
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Models.CustomException">
            <summary>
            CustomException
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.CustomException.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="M:AhDai.Core.Models.CustomException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="code">建议使用1000-2000之间的值</param>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:AhDai.Core.Models.FileData">
            <summary>
            上传文件
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Guid">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Name">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Extension">
            <summary>
            后缀名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.FullName">
            <summary>
            文件全名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Length">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.PhysicalPath">
            <summary>
            物理路径
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.VirtualPath">
            <summary>
            虚拟路径
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.FileData.Hash">
            <summary>
            哈希
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.HttpRequest">
            <summary>
            Http请求数据
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Method">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Query">
            <summary>
            Query
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Headers">
            <summary>
            头
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpRequest.Body">
            <summary>
            内容
            </summary>
        </member>
        <member name="M:AhDai.Core.Models.HttpRequest.#ctor(System.Net.Http.HttpMethod,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="method"></param>
            <param name="url"></param>
            <param name="contentType"></param>
        </member>
        <member name="T:AhDai.Core.Models.HttpResponse">
            <summary>
            Http响应数据
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ResponseUri">
            <summary>
            ResponseUri
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.StatusCode">
            <summary>
            StatusCode
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ReasonPhrase">
            <summary>
            ReasonPhrase
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ContentType">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ContentLength">
            <summary>
            ContentLength
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ContentEncoding">
            <summary>
            ContentEncoding
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.ContentLanguage">
            <summary>
            ContentLanguage
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.HttpResponse.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.PageData`1">
            <summary>
            分页数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AhDai.Core.Models.PageData`1.Count">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.PageData`1.List">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:AhDai.Core.Models.PageData`1.#ctor(System.Int32,System.Collections.Generic.ICollection{`0})">
            <summary>
            构造函数
            </summary>
            <param name="count"></param>
            <param name="list"></param>
        </member>
        <member name="T:AhDai.Core.Models.SortType">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="F:AhDai.Core.Models.SortType.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:AhDai.Core.Models.SortType.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.StatisticFlag">
            <summary>
            统计标识
            </summary>
        </member>
        <member name="F:AhDai.Core.Models.StatisticFlag.Not">
            <summary>
            不统计
            </summary>
        </member>
        <member name="F:AhDai.Core.Models.StatisticFlag.General">
            <summary>
            一般统计
            </summary>
        </member>
        <member name="F:AhDai.Core.Models.StatisticFlag.Only">
            <summary>
            只统计
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.Token`1">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.Token`1.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.Token`1.Signature">
            <summary>
            用户名对应签名Token
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.Token`1.Expiry">
            <summary>
            Token过期时间
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.Token`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.TokenData">
            <summary>
            TokenData
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Id">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Platform">
            <summary>
            平台
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenData.Extensions">
            <summary>
            扩展数据：存储键为 Ext-{key}
            </summary>
        </member>
        <member name="T:AhDai.Core.Models.TokenResult">
            <summary>
            TokenResult
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenResult.Id">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenResult.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenResult.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenResult.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:AhDai.Core.Models.TokenResult.Type">
            <summary>
            认证类型：Bearer
            </summary>
        </member>
        <member name="T:AhDai.Core.Options.MailOptions">
            <summary>
            MailOptions
            </summary>
        </member>
        <member name="P:AhDai.Core.Options.MailOptions.Config">
            <summary>
            邮箱配置
            </summary>
        </member>
        <member name="T:AhDai.Core.Options.RedisOptions">
            <summary>
            RedisOptions
            </summary>
        </member>
        <member name="P:AhDai.Core.Options.RedisOptions.Config">
            <summary>
            Redis配置
            </summary>
        </member>
        <member name="T:AhDai.Core.Services.IActionResult`1">
            <summary>
            IActionResult
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AhDai.Core.Services.IActionResult`1.ActionId">
            <summary>
            动作Id
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.IActionResult`1.Code">
            <summary>
            状态代码
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.IActionResult`1.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.IActionResult`1.Content">
            <summary>
            结果
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.IActionResult`1.ContentType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="T:AhDai.Core.Services.IBaseFileService">
            <summary>
            IBaseFileService
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.IBaseFileService.UploadAsync(System.String,Microsoft.AspNetCore.Http.IFormFile[])">
            <summary>
            上传
            </summary>
            <param name="rootPath"></param>
            <param name="formFiles"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseFileService.DownloadAsync(System.String,System.String,System.String)">
            <summary>
            下载
            </summary>
            <param name="rootPath"></param>
            <param name="fileName"></param>
            <param name="fileUrl"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseFileService.DownloadAsync(System.Net.Http.HttpClient,System.String,System.String,System.String)">
            <summary>
            下载
            </summary>
            <param name="httpClient"></param>
            <param name="rootPath"></param>
            <param name="fileName"></param>
            <param name="fileUrl"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Services.IBaseJwtService">
            <summary>
            Jwt服务
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.GenerateTokenAsync(AhDai.Core.Models.TokenData)">
            <summary>
            生成Token
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.GenerateTokenAsync(System.Security.Claims.Claim[])">
            <summary>
            生成Token
            </summary>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.ReadToken(System.String)">
            <summary>
            读取Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.GetTokenData(System.String)">
            <summary>
            获取声明的数据
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.RefreshTokenAsync(System.String)">
            <summary>
            刷新Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.ValidateTokenAsync(System.String)">
            <summary>
            从缓存验证Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.RemoveTokenAsync(System.String)">
            <summary>
            从缓存中移除Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseJwtService.ToTokenData(System.Security.Claims.Claim[])">
            <summary>
            转数据
            </summary>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Services.IBaseMailService">
            <summary>
            IMailService
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.IBaseMailService.CreateSmtpClient(AhDai.Core.Configs.MailConfig)">
            <summary>
            创建客户端
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseMailService.Send(System.String,System.String,System.String,AhDai.Core.Configs.MailConfig)">
            <summary>
            发送
            </summary>
            <param name="recipients">接收人</param>
            <param name="subject">主题</param>
            <param name="body">正文</param>
            <param name="config">自定义配置</param>
        </member>
        <member name="T:AhDai.Core.Services.IBaseRedisService">
            <summary>
            Redis服务
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.CreateConfiguration(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            创建连接配置
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="password"></param>
            <param name="abortConnect"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.CreateConnectionMultiplexer(System.String)">
            <summary>
            创建连接器
            </summary>
            <param name="configuration">配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.CreateConfiguration(AhDai.Core.Configs.RedisConfig)">
            <summary>
            创建连接配置
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.CreateConnectionMultiplexer(AhDai.Core.Configs.RedisConfig)">
            <summary>
            创建连接器
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.GetConnectionMultiplexer(AhDai.Core.Configs.RedisConfig)">
            <summary>
            获取连接实例
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.IBaseRedisService.GetDatabase(System.Int32,System.Object,AhDai.Core.Configs.RedisConfig)">
            <summary>
            GetDatabase
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Services.Impl.BaseFileService">
            <summary>
            文件服务
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseFileService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            文件服务
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseFileService.Config">
            <summary>
            Config
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseFileService.UploadAsync(System.String,Microsoft.AspNetCore.Http.IFormFile[])">
            <summary>
            上传
            </summary>
            <param name="rootPath"></param>
            <param name="formFiles"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseFileService.DownloadAsync(System.String,System.String,System.String)">
            <summary>
            下载
            </summary>
            <param name="rootPath"></param>
            <param name="fileName"></param>
            <param name="fileUrl"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseFileService.DownloadAsync(System.Net.Http.HttpClient,System.String,System.String,System.String)">
            <summary>
            下载
            </summary>
            <param name="httpClient"></param>
            <param name="rootPath"></param>
            <param name="fileName"></param>
            <param name="fileUrl"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseFileService.Compress(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            批量压缩
            </summary>
            <param name="rootPath"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Services.Impl.BaseJwtService">
            <summary>
            Jwt服务
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseJwtService.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseJwtService.Logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseJwtService.Services">
            <summary>
            Services
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.#ctor(Microsoft.Extensions.Configuration.IConfiguration,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{AhDai.Core.Services.Impl.BaseJwtService})">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.GenerateTokenAsync(AhDai.Core.Models.TokenData)">
            <summary>
            GenerateToken
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.GenerateTokenAsync(System.Security.Claims.Claim[])">
            <summary>
            GenerateToken
            </summary>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.ReadToken(System.String)">
            <summary>
            获取声明的数据
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.GetTokenData(System.String)">
            <summary>
            获取声明的数据
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.RefreshTokenAsync(System.String)">
            <summary>
            刷新Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.ValidateTokenAsync(System.String)">
            <summary>
            从缓存验证Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.RemoveTokenAsync(System.String)">
            <summary>
            从缓存中移除Token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseJwtService.ToTokenData(System.Security.Claims.Claim[])">
            <summary>
            转数据
            </summary>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Services.Impl.BaseMailService">
            <summary>
            邮件服务
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseMailService.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseMailService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造函数
            </summary>
            <param name="configuration">配置</param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseMailService.CreateSmtpClient(AhDai.Core.Configs.MailConfig)">
            <summary>
            创建客户端
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseMailService.Send(System.String,System.String,System.String,AhDai.Core.Configs.MailConfig)">
            <summary>
            发送
            </summary>
            <param name="recipients">接收人</param>
            <param name="subject">主题</param>
            <param name="body">正文</param>
            <param name="config">自定义配置</param>
        </member>
        <member name="T:AhDai.Core.Services.Impl.BaseRedisService">
            <summary>
            Redis服务
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseRedisService.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:AhDai.Core.Services.Impl.BaseRedisService.Logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{AhDai.Core.Services.Impl.BaseRedisService})">
            <summary>
            构造函数
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.CreateConfiguration(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            创建连接配置
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="password"></param>
            <param name="abortConnect"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.CreateConfiguration(AhDai.Core.Configs.RedisConfig)">
            <summary>
            创建连接配置
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.CreateConnectionMultiplexer(System.String)">
            <summary>
            创建连接器
            </summary>
            <param name="configuration">配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.CreateConnectionMultiplexer(AhDai.Core.Configs.RedisConfig)">
            <summary>
            创建连接器
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.GetConnectionMultiplexer(AhDai.Core.Configs.RedisConfig)">
            <summary>
            获取连接实例
            </summary>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.GetDatabase(System.Int32,System.Object,AhDai.Core.Configs.RedisConfig)">
            <summary>
            GetDatabase
            </summary>
            <param name="db"></param>
            <param name="asyncState"></param>
            <param name="config">自定义配置</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.ConfigurationChangedBroadcast(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            当节点被明确请求通过广播重新配置时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.ConfigurationChanged(System.Object,StackExchange.Redis.EndPointEventArgs)">
            <summary>
            检测到配置更改时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.HashSlotMoved(System.Object,StackExchange.Redis.HashSlotMovedEventArgs)">
            <summary>
            当哈希槽被重新定位时/更改集群
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.ErrorMessage(System.Object,StackExchange.Redis.RedisErrorEventArgs)">
            <summary>
            发生错误时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.InternalError(System.Object,StackExchange.Redis.InternalErrorEventArgs)">
            <summary>
            发生内部错误时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.ConnectionFailed(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            连接失败，如果重新连接成功将不会收到这个通知
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:AhDai.Core.Services.Impl.BaseRedisService.ConnectionRestored(System.Object,StackExchange.Redis.ConnectionFailedEventArgs)">
            <summary>
            建立物理连接时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:AhDai.Core.Utils.ComputerUtil">
            <summary>
            ComputerUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.ComputerUtil.GetMacAddress">
            <summary>
            获取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.ComputerUtil.GetMacAddresses">
            <summary>
            获取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.ConfigurationUtil">
            <summary>
            ConfigurationUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.ConfigurationUtil.GetAll(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            获取所有
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:AhDai.Core.Utils.ConfigurationUtil.GetAll(Microsoft.Extensions.Configuration.IConfigurationSection[])">
            <summary>
            获取所有
            </summary>
            <param name="sections"></param>
        </member>
        <member name="T:AhDai.Core.Utils.FileUtil">
            <summary>
            FileUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.OutputImage(System.String)">
            <summary>
            输出图片
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.OutputImageAsync(System.String)">
            <summary>
            输出图片
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.Output(System.Byte[],System.String,System.String)">
            <summary>
            输出文件
            </summary>
            <param name="bytes"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.Output(System.IO.Stream,System.String,System.String)">
            <summary>
            输出文件
            </summary>
            <param name="stream"></param>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.ToPhysicalPath(System.String,System.Char)">
            <summary>
            转换为物理路径
            </summary>
            <param name="path"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.FileUtil.GetFileSize(System.Int64)">
            <summary>
            换算文件大小
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.HttpRequestUtil">
            <summary>
            HttpRequestUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.HttpRequestUtil.VerifyFrequencyLimit(System.String,System.String,System.Double)">
            <summary>
            验证请求频率限制
            </summary>
            <param name="ipAddress">IP地址</param>
            <param name="path">请求路径</param>
            <param name="limit">每秒限制次数</param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.HttpUtil">
            <summary>
            HttpHelper
            </summary>
        </member>
        <member name="P:AhDai.Core.Utils.HttpUtil.Client">
            <summary>
            Client
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.CreateRequest(AhDai.Core.Models.HttpRequest)">
            <summary>
            创建请求
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.ConvertResponseAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            转换响应
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.SendAsync(AhDai.Core.Models.HttpRequest)">
            <summary>
            发送请求
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.SendAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            发送请求
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.ConvertHttpMethod(System.String)">
            <summary>
            类型转换
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.ParseQueryString(System.String)">
            <summary>
            ParseQueryString
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncode``1(``0)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncode``1(``0,System.Text.Encoding)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncodeUpper``1(``0)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncodeUpper``1(``0,System.Text.Encoding)">
            <summary>
            UrlEncode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncodeUpper(System.String)">
            <summary>
            转换Url编码为大写
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlEncodeUpper(System.String,System.Text.Encoding)">
            <summary>
            转换Url编码为大写
            </summary>
            <param name="str"></param>
            <param name="encoding">编码</param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlDecode``1(``0)">
            <summary>
            UrlDecode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.UrlDecode``1(``0,System.Text.Encoding)">
            <summary>
            UrlDecode
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.HttpUtil.IsIp(System.String)">
            <summary>
            IsIp
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.DatetimeJsonConverter">
            <summary>
            JsonConverter
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:AhDai.Core.Utils.DatetimeJsonConverter.#ctor(System.String)">
            <summary>
            JsonConverter
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:AhDai.Core.Utils.DatetimeJsonConverter.Format">
            <summary>
            格式
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.DatetimeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Read
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.DatetimeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Write
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:AhDai.Core.Utils.JsonUtil">
            <summary>
            JsonUtil
            </summary>
        </member>
        <member name="P:AhDai.Core.Utils.JsonUtil.Options">
            <summary>
            Options
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.JsonUtil.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.JsonUtil.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.JsonUtil.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.LoggerUtil">
            <summary>
            LoggerUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.LoggerUtil.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.LoggerUtil.GetLogger``1">
            <summary>
            GetLogger
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.LoggerUtil.GetLogger(System.String,System.Int32)">
            <summary>
            GetLogger
            </summary>
            <param name="categoryName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:AhDai.Core.Utils.RARUtil">
            <summary>
            RARUtil
            </summary>
        </member>
        <member name="P:AhDai.Core.Utils.RARUtil.ApplicationPath">
            <summary>
            WinRAR.exe路径
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.RARUtil.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.RARUtil.SetApplicationPath(System.String)">
            <summary>
            初始化
            </summary>
            <param name="applicationPath"></param>
        </member>
        <member name="M:AhDai.Core.Utils.RARUtil.Compress(System.String,System.String,System.String,System.Int32)">
            <summary>
            利用WinRAR进行压缩
            </summary>
            <param name="sourcePath">要压缩的文件夹（绝对路径）</param>
            <param name="rarPath">压缩后的.rar文件的存放目录（绝对路径）</param>
            <param name="rarName">压缩文件的名称（包括后缀）</param>
            <param name="level">压缩级别（0-5）</param>
        </member>
        <member name="M:AhDai.Core.Utils.RARUtil.UnCompress(System.String,System.String,System.String)">
            <summary>
            利用WinRAR进行解压缩
            </summary>
            <param name="path">文件解压路径（绝对）</param>
            <param name="rarPath">要解压缩的.rar文件的存放目录（绝对路径）</param>
            <param name="rarName">要解压缩的.rar文件名（包括后缀）</param>
        </member>
        <member name="T:AhDai.Core.Utils.ServiceUtil">
            <summary>
            ServiceHelper
            </summary>
        </member>
        <member name="P:AhDai.Core.Utils.ServiceUtil.Services">
            <summary>
            服务实例
            </summary>
        </member>
        <member name="P:AhDai.Core.Utils.ServiceUtil.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.ServiceUtil.Init(System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:AhDai.Core.Utils.VerifyCodeUtil">
            <summary>
            VerifyCodeUtil
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.#cctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.GenerateImageCode(System.String,System.Int32)">
            <summary>
            生成图片验证码
            </summary>
            <param name="guid"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.VerifyImageCode(System.String,System.String)">
            <summary>
            验证图片验证码
            </summary>
            <param name="guid"></param>
            <param name="code"></param>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.GenerateImageCode(System.Int32,System.String@)">
            <summary>
            生成指定长度的图片验证码
            </summary>
            <param name="length"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.GenerateImageCode(Microsoft.AspNetCore.Http.HttpResponse,System.String,System.Int32)">
            <summary>
            生成图片验证码
            </summary>
            <param name="httpResponse"></param>
            <param name="guid"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:AhDai.Core.Utils.VerifyCodeUtil.VerifyImageCode(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            验证图片验证码
            </summary>
            <param name="httpRequest"></param>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the MobileDeviceRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.MobileDeviceRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_nonAscii_861D04F9611DABC0E32F99B97EE89E025E4FD09A6CA35C93A4DAD1C689E4B89C">
            <summary>Supports searching for characters in or not in "ABIMNSUWabimnsuwİ".</summary>
        </member>
    </members>
</doc>
